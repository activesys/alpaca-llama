"""
test_dot.py
unittesting for Dot
"""

import unittest
from dot import Dot
from graph import Graph

class TestDot(unittest.TestCase):
    def test_dot(self):
        dot = Dot()
        graph = Graph()
        graph.adjlist.extend(
            [[(1,'a'),(0,'b'),(3,'\\d')],[(1,'a'),(3,'c')],[(None, None)],
             [(3,'c'),(3,'\\d'),(5,'"')],[(None, None)],[]])
        graph.start = 0
        graph.finish = [3, 5]
        dot.start(graph.start, graph.finish)
        for vb, ve, e in graph:
            dot.new_edge(vb, ve, e)
        dot.end()
        self.assertEqual(dot.script,
            'digraph G {\n' +
            '    graph [rankdir = LR, label = "Generated by alpaca.py 1.0\\n(C) 2013 activesys.wb@gmail.com"];\n' +
            '    node [shape = circle];\n' +
            '    start [shape = plaintext, label = ""];\n' +
            '    start -> S0 [label = "start"];\n' +
            '    S3 [shape = doublecircle];\n' +
            '    S5 [shape = doublecircle];\n' +
            '    S0 -> S1 [label = "a"];\n' +
            '    S0 -> S0 [label = "b"];\n' +
            '    S0 -> S3 [label = "\\d"];\n' +
            '    S1 -> S1 [label = "a"];\n' +
            '    S1 -> S3 [label = "c"];\n' +
            '    S3 -> S3 [label = "c"];\n' +
            '    S3 -> S3 [label = "\\d"];\n' +
            '    S3 -> S5 [label = "\\""];\n' +
            '}')

